<?xml version="1.0" encoding="UTF-8"?>
<document>
  <properties>
    <title>Changes</title>
  </properties>
  <body>
    <release version="1.0-dev" date="in CVS">
    	<action dev="jeremias" type="remove">
        IOUtils: Removed the copy() and toByteArray() variants with the bufferSize
        parameter. Reasoning can be found at
        http://www.mail-archive.com/commons-dev@jakarta.apache.org/msg19703.html
    	</action>
      <action type="update">
        Renamed all *Util.java to *Utils.java for consistency.
      </action>
      <action dev="jeremias" type="update" 
          due-to="Matthew Hawthorne" due-to-email="mhawthorne at alumni.pitt.edu">
        Moved copy methods from IOUtils to CopyUtils.
      </action>
      <action dev="jeremias" type="update" 
          due-to="Matthew Hawthorne" due-to-email="mhawthorne at alumni.pitt.edu">
        Deprecated all methods in FileUtils using String filenames instead of 
        java.io.File.
      </action>
      <action dev="bayard" type="remove">
        Removed StreamUtils as all functionality is is IOUtils (and CopyUtils).
      </action>
      <action dev="rdonkin" type="fix">
        Fixed typos in Apache license.
      </action>
      <action dev="jeremias" type="update">
        All of Commons IO now uses its own ByteArrayOutputStream instead of 
        java.io.ByteArrayOutputStream which should improve speed.
      </action>
      <action dev="jeremias" type="remove">
        Removed deprecated IOUtils.bufferedCopy method.
      </action>
      <action dev="bayard" type="add">
        ProxyInput/OutputStream: Better alternative base class than 
        FilterInput/OutputStream.
      </action>
      <action dev="jeremias" type="add"
          due-to="Alban Peignier" due-to-email="alban.peignier at free.fr">
        New methods for FileUtils: isFileNewer() (3 variants)
      </action>
      <action dev="bayard" type="add"
          due-to="Jeremias Maerki" due-to-email="jeremias at apache.org">
        Added an alternative ByteArrayOutputStream implementation which is faster than
        the original java.io.ByteArrayOutputStream by reusing buffers instead of 
        reallocating them when the buffer needs to be resized.
      </action>
    </release>
  </body>
</document>

