<?xml version="1.0" encoding="UTF-8"?>
<project name="org.prorefactor.refactor" default="build.jars" basedir=".">

	<property name="basews" value="${ws}"/>
	<property name="baseos" value="${os}"/>
	<property name="basearch" value="${arch}"/>
	<property name="basenl" value="${nl}"/>

	<!-- Compiler settings. -->
	<property name="javacFailOnError" value="false"/>
	<property name="javacDebugInfo" value="on"/>
	<property name="javacVerbose" value="true"/>
	<property name="javacSource" value="1.3"/>
	<property name="javacTarget" value="1.2"/>
	<property name="compilerArg" value=""/>
	<path id="path_bootclasspath">
		<fileset dir="${java.home}/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath"/>

	<target name="init" depends="properties">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="pluginTemp" value="${basedir}"/>
		<condition property="build.result.folder" value="${pluginTemp}/org.prorefactor.refactor">
			<isset property="buildTempFolder"/>
		</condition>
		<property name="build.result.folder" value="${basedir}"/>
		<property name="temp.folder" value="${basedir}/temp.folder"/>
		<property name="plugin.destination" value="${basedir}"/>
	</target>

	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>

	</target>

	<target name="build.update.jar" depends="init" description="Build the plug-in: org.prorefactor.refactor for an update site.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<zip destfile="${plugin.destination}/org.prorefactor.refactor_1.2.4.jar" basedir="${temp.folder}/org.prorefactor.refactor_1.2.4" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refactor.jar" depends="init" unless="refactor.jar" description="Create jar: org.prorefactor.refactor refactor.jar.">
		<delete dir="${temp.folder}/refactor.jar.bin"/>
		<mkdir dir="${temp.folder}/refactor.jar.bin"/>
		<!-- compile the source code -->
		<javac destdir="${temp.folder}/refactor.jar.bin" failonerror="${javacFailOnError}" verbose="${javacVerbose}" debug="${javacDebugInfo}" includeAntRuntime="no" bootclasspath="${bootclasspath}" source="${javacSource}" target="${javacTarget}"		>
			<compilerarg line="${compilerArg}"/>
			<classpath>
				<pathelement path="../org.prorefactor.core/bin"/>
				<pathelement path="../org.prorefactor.core/core.jar"/>
				<pathelement path="../../../progfile/eclipse/plugins/org.junit_3.8.1/progfile/eclipse/plugins/org.junit_3.8.1/junit.jar"/>
				<pathelement path="../../../progfile/eclipse/plugins/org.junit_3.8.1/junit.jar"/>
				<pathelement path="../org.prorefactor.antlr/antlr.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/cglib-full-2.0.2.jar"/>
				<pathelement path="../org.prorefactor.lib/hsqldb/hsqldb.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/commons-logging-1.0.4.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/dom4j-1.4.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/ehcache-0.9.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/jdbc2_0-stdext.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/jta.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/odmg-3.0.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/xerces-2.4.0.jar"/>
				<pathelement path="../org.prorefactor.lib/hibernate/xml-apis.jar"/>
				<pathelement path="../org.prorefactor.lib/jakarta/commons-collections/commons-collections.jar"/>
				<pathelement path="../org.prorefactor.lib/jakarta/commons-io/commons-io.jar"/>
				<pathelement path="../org.prorefactor.lib/jakarta/commons-lang/commons-lang.jar"/>
				<pathelement path="../org.prorefactor.lib/stringtemplate/stringtemplate.jar"/>
				<pathelement path="../org.prorefactor.lib/bin/"/>
				<pathelement path="../org.prorefactor.lib/prorefactor.lib.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.swt/@dot"/>
				<pathelement path="..\..\..\progfile\eclipse\plugins\org.eclipse.swt.win32.win32.x86_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface/progfile/eclipse/plugins/org.eclipse.jface_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface/org.eclipse.jface_3.1.0.jar"/>
				<pathelement path="..\..\..\progfile\eclipse\plugins\org.eclipse.core.commands_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime/progfile/eclipse/plugins/org.eclipse.core.runtime_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.core.runtime/org.eclipse.core.runtime_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.osgi/progfile/eclipse/plugins/org.eclipse.osgi_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.osgi/org.eclipse.osgi_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface.text/progfile/eclipse/plugins/org.eclipse.jface.text_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.jface.text/org.eclipse.jface.text_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.text/progfile/eclipse/plugins/org.eclipse.text_3.1.0.jar"/>
				<pathelement path="../../prorefactor_work/workspace/org.eclipse.text/org.eclipse.text_3.1.0.jar"/>
			</classpath>
			<src path="src/"			/>
			</javac>
		<!-- Copy necessary resources -->
		<copy todir="${temp.folder}/refactor.jar.bin" failonerror="true" overwrite="false">
			<fileset dir="src/" excludes="**/*.java, **/package.htm*,null"			/>
		</copy>
		<mkdir dir="${build.result.folder}"/>
		<jar destfile="${build.result.folder}/refactor.jar" basedir="${temp.folder}/refactor.jar.bin"/>
		<delete dir="${temp.folder}/refactor.jar.bin"/>
	</target>

	<target name="refactorsrc.zip" depends="init" unless="refactorsrc.zip">
		<mkdir dir="${build.result.folder}"/>
		<zip destfile="${build.result.folder}/refactorsrc.zip" filesonly="false" whenempty="skip" update="false">
			<fileset dir="src/" includes="**/*.java"			/>
		</zip>
	</target>

	<target name="build.jars" depends="init" description="Build all the jars for the plug-in: org.prorefactor.refactor.">
		<available property="refactor.jar" file="${build.result.folder}/refactor.jar"/>
		<antcall target="refactor.jar"/>
	</target>

	<target name="build.sources" depends="init">
		<available property="refactorsrc.zip" file="${build.result.folder}/refactorsrc.zip"/>
		<antcall target="refactorsrc.zip"/>
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4"/>
		<copy todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="true" overwrite="false">
			<fileset dir="${build.result.folder}" includes="refactor.jar"			/>
		</copy>
		<copy todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="true" overwrite="false">
			<fileset dir="${basedir}" includes="plugin.xml,*.jar,*.zip,icons/,data/,prorefactor/,*.html,4gl/"			/>
		</copy>
	</target>

	<target name="build.zips" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4"/>
		<copy file="${build.result.folder}/refactorsrc.zip" todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="false" overwrite="false"/>
		<copy todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="false" overwrite="false">
			<fileset dir="${basedir}" includes="*.html,src/,prorefactor/,plugin.xml,data/,4gl/"			/>
		</copy>
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
		<mkdir dir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4"/>
		<copy file="${temp.folder}/refactor.jar.bin.log" todir="${destination.temp.folder}/org.prorefactor.refactor_1.2.4" failonerror="false" overwrite="false"/>
	</target>

	<target name="clean" depends="init" description="Clean the plug-in: org.prorefactor.refactor of all the zips, jars and logs created.">
		<delete file="${build.result.folder}/refactor.jar"/>
		<delete file="${build.result.folder}/refactorsrc.zip"/>
		<delete file="${plugin.destination}/org.prorefactor.refactor_1.2.4.jar"/>
		<delete file="${plugin.destination}/org.prorefactor.refactor_1.2.4.zip"/>
		<delete dir="${temp.folder}"/>
	</target>

	<target name="refresh" depends="init" if="eclipse.running" description="Refresh this folder.">
		<eclipse.convertPath fileSystemPath="C:/work/prorefactor/org.prorefactor.refactor" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>

	<target name="zip.plugin" depends="init" description="Create a zip containing all the elements for the plug-in: org.prorefactor.refactor.">
		<delete dir="${temp.folder}"/>
		<mkdir dir="${temp.folder}"/>
		<antcall target="build.jars"/>
		<antcall target="build.sources"/>
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/"/>
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log"			/>
		</delete>
		<zip destfile="${plugin.destination}/org.prorefactor.refactor_1.2.4.zip" basedir="${temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${temp.folder}"/>
	</target>

</project>
